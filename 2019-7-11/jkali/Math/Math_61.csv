id,compile_time,compile_result,process_failing_time,process_failing_result,process_failing_count,process_failing_cases,process_regression_time,process_regression_result,hotswap_time,hotswap_length,hotswap_failing_time,hotswap_failing_result,hotswap_failing_count,hotswap_failing_cases,hotswap_regression_time,side_effect
2,28,true,308,false,2,"[testMean(org.apache.commons.math.distribution.PoissonDistributionTest): the Poisson mean must be positive (-1)-, testNormalApproximateProbability(org.apache.commons.math.distribution.PoissonDistributionTest): expected:<0.706281887248> but was:<0.0>-]",,,4,3467,86,false,2,"[testMean(org.apache.commons.math.distribution.PoissonDistributionTest): the Poisson mean must be positive (-1)-, testNormalApproximateProbability(org.apache.commons.math.distribution.PoissonDistributionTest): expected:<0.706281887248> but was:<0.0>-]",,
3,34,true,234,false,12,"[testDegenerateInverseCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testCumulativeProbabilitySpecial(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testMean(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testLargeMeanInverseCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testNormalApproximateProbability(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testLargeMeanCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testDensities(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testInverseCumulativeProbabilities(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testSampling(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testCumulativeProbabilities(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, ...and 2 failures more]",,,3,3452,6,false,12,"[testDegenerateInverseCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testCumulativeProbabilitySpecial(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testMean(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testLargeMeanInverseCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testNormalApproximateProbability(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testLargeMeanCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testDensities(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testInverseCumulativeProbabilities(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testSampling(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, testCumulativeProbabilities(org.apache.commons.math.distribution.PoissonDistributionTest): standard deviation must be positive (2)-, ...and 2 failures more]",,
4,27,true,363,false,1,[testMean(org.apache.commons.math.distribution.PoissonDistributionTest): the Poisson mean must be positive (-1)-],,,4,3000,84,false,1,[testMean(org.apache.commons.math.distribution.PoissonDistributionTest): the Poisson mean must be positive (-1)-],,
5,25,true,313,false,1,[testMean(org.apache.commons.math.distribution.PoissonDistributionTest): the Poisson mean must be positive (-1)-],,,3,3000,80,false,1,[testMean(org.apache.commons.math.distribution.PoissonDistributionTest): the Poisson mean must be positive (-1)-],,
6,23,true,407,false,2,"[testMean(org.apache.commons.math.distribution.PoissonDistributionTest): the Poisson mean must be positive (-1)-, testNormalApproximateProbability(org.apache.commons.math.distribution.PoissonDistributionTest): expected:<0.706281887248> but was:<1.0>-]",,,3,3467,81,false,2,"[testMean(org.apache.commons.math.distribution.PoissonDistributionTest): the Poisson mean must be positive (-1)-, testNormalApproximateProbability(org.apache.commons.math.distribution.PoissonDistributionTest): expected:<0.706281887248> but was:<1.0>-]",,
